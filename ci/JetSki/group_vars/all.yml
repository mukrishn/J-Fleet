# Your allocation name/number in the shared labs
cloud_name: "{{ lookup('env', 'CLOUD_NAME') | default('cloud00', true) }}"
# Lab name, typically can be alias or scale
lab_name: "{{ lookup('env', 'LAB_NAME') | default('scale', true) }}"
# Default root password to your nodes in the lab allocation so that keys can be added automatically for ansible to run
ansible_ssh_pass:  "{{ lookup('env', 'ANSIBLE_SSH_PASSWORD') | default('password', true) }}"
# Location of the private key of the user running the ansible playbook, leave default
ansible_ssh_key: "{{ lookup('env', 'PRIVATE_KEY') | default(ansible_user_dir + '/.ssh/id_rsa', true) }}"
# The version of the openshift-installer, undefined or empty results in the playbook failing with error message.
# Values accepted: 'latest-4.3', 'latest-4.4', explicit version i.e. 4.3.0-0.nightly-2019-12-09-035405
# For reference, https://openshift-release.svc.ci.openshift.org/
version: "{{ lookup('env', 'OPENSHIFT_RELEASE') | default('4.6.16', true) }}"
# Enter whether the build should use 'dev' (nightly builds) or 'ga' for Generally Available version of OpenShift
# Empty value results in playbook failing with error message.
build: "{{ lookup('env', 'OPENSHIFT_BUILD') | default('ga', true) }}"
# Your pull secret as is, https://cloud.redhat.com/openshift/install
pullsecret: "{{ lookup('env', 'OPENSHIFT_INSTALL_PULL_SECRET') }}"
# This variable is used to point to the foreman server that is used to reimage nodes. This variables is useful in two cases
# 1. When the first node in your allocation (provisioning host) is not having RHEL 8.1 OS, it is automatically rebuilt with 
# RHEL 8.1 as the OCP installer expects the provisioning host to be RHEL 8.1. In some other cases, maybe when you have an 
# existing cluster and are trying to reinstall etc, it might be better to start with a clean provisioning host, in which case this variable
# is also used to reimage the provisioning host in spite of it having RHEL 8.1 on it. This variable changes depending on the lab you are
# using as each lab has its own foreman server. This URL can be deduced from the lab allocation email you receive when your allocation is
# ready. It will be under the paragraph "You can also view/manage your hosts via Foreman:" in the email. It is important to use an https
# prefix even if url in the email has http. Also, the url in email might have the '/hosts' path appended, we can remove 'hosts' from url 
# and have it be https://foreman.example.com for example. If you are having trouble figuring out this variable please look for the 
# pastebins under the "Modifying the ansible-ipi-install/group_vars/all.yml file" section in README.md
foreman_url: "{{ lookup('env', 'FOREMAN_URL') }}"
# The automation automatically rebuilds provisioner node to RHEL 8.1 if not already RHEL 8.1 (see foreman_url variable)
# However you can also force a reprovsioning of the provisioner node for redeployment scenarios
rebuild_provisioner: "{{ lookup('env', 'REBUILD_ORCHESTRATION') | default(false, true)| bool }}"
# Number of workers desired, by default all hosts in your allocation except 1 provisioner and 3 masters are used workers
# However that behaviour can be overrided by explicitly settign the desired number of workers here. For a masters only deploy,
# set worker_count to 0
worker_count: "{{ lookup('env', 'OPENSHIFT_WORKER_COUNT') | default(0, true) | int }}"
# set to true to deploy with jumbo frames
jumbo_mtu: "{{ lookup('env', 'JUMBO_MTU') | default(true) | bool }}"
# set to true only if you requested a public routable VLAN for your cloud in scale lab
routable_api: "{{ lookup('env', 'ROUTABLE_API') | default(true) | bool }}"
